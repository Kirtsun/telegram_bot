from aiogram import Bot, Dispatcher, executor, types
import os
from dotenv import load_dotenv
from pars import get_currency

load_dotenv()


async def start(massage: types.Message):
    murkup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è')
    btn2 = types.KeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    murkup.row(btn1, btn2)
    await massage.answer(f'{massage.from_user.first_name}, –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç, –æ–Ω –ø–æ–∫–∞ —á—Ç–æ –Ω–∏—á–µ–≥–æ'
                                      f' –Ω–µ —É–º–µ–µ—Ç –∫—Ä–æ–º–µ —ç—Ç–æ–≥–æ! –ù–æ –æ–Ω –µ—â–µ –æ–±—É—á–∞–µ—Ç—Å—è! –î—É–º–∞—é –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –æ–Ω –±—É–¥–µ—Ç '
                                      f'—É–º–µ—Ç—å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ.', reply_markup=murkup)


async def pars(massage: types.Message):
    murkup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    murkup.row(btn1)
    file = open('./photo.jpeg', 'rb')
    await massage.answer_photo(file, caption='–ê —á—Ç–æ —Ç—ã –¥—É–º–∞–ª, —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ –≤—Å–µ –±—É–¥–µ—Ç? –ù–∏—Ñ–∏–≥–∞, —è —Ç–æ–∫ —É—á—É —ç—Ç–æ –≤—Å–µ!',
                               reply_markup=murkup)


async def currency(massage: types.Message):
    murkup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è')
    murkup.row(btn1)
    res = get_currency()
    if res is not False:
        await massage.answer(f'–ö—É—Ä—Å –≤–∞–ª—é—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —Å–æ–≥–ª–∞—Å–Ω–æ –¥–∞–Ω–Ω—ã–º MonoBank.\n\nUSD üá∫üá∏'
                                              f' –ü–æ–∫—É–ø–∫–∞: {res["USD"][0]} - –ü—Ä–æ–¥–∞–∂–∞ {res["USD"][1]}\n\n'
                                              f'EUR üá™üá∫ –ü–æ–∫—É–ø–∫–∞: {res["EUR"][0]} - –ü—Ä–æ–¥–∞–∂–∞ {res["EUR"][1]}',
                             reply_markup=murkup)
    else:
        await massage.answer(f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç–æ—á–∫–∏. –°–ø–∞—Å–∏–±–æ ‚ò∫Ô∏è')


async def handler_command(massage: types.Message):
    text = massage.text.lower().lower()
    if text == '–∫—É—Ä—Å –≤–∞–ª—é—Ç':
        await currency(massage)
    elif text == '–æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è':
        await pars(massage)
    else:
        await massage.answer(f'–ß—Ç–æ –Ω–µ —Ç–æ –≤–≤–µ–ª —Ñ—Ä–∞–µ—Ä–æ–∫, –¥–∞–≤–∞–π –∫–∞ –µ—â–µ —Ä–∞–∑–æ–∫!')


if __name__ == '__main__':
    dp = Dispatcher(Bot(os.getenv('API')))
    dp.register_message_handler(start, commands=['start'])
    dp.register_message_handler(pars, commands=['pars'])
    dp.register_message_handler(handler_command)
    executor.start_polling(dp)
